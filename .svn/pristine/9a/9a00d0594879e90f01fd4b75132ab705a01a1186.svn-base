from flask import Flask, request, jsonify
#from datetime import datetime
from model_builder.modelBuild import ModelBuilderHandle
from model_store.controller.challenge_schema import ChallengeInput
from marshmallow import ValidationError
from model_store.persistency.persistency import Challenge_esi
from model_store.controller.challenge_schema import ChallengeInput

import os

app = Flask(__name__)

mbh = ModelBuilderHandle()
CSVfile = "C:\\Users\\user1\\SearchEngine\\repository\\data\\ChallengeData.csv"

c_esi = Challenge_esi()

@app.route('/')
def index():
    return 'Hello World'

@app.route('/buildmodel', methods = ["GET"])    
def buildmodel():
    text = mbh.textProcessor(csv_file = CSVfile)
    print('got text')

    _count_vect, _tfidf_transformer, _train_tfidf = mbh.build_model(text = text)
    
    return ('processed successfully')
     
@app.route('/insertes', methods = ["POST"])    
def insert_es(): 
    #posted data in json format
    request_json = request.json
    try:
        #deserializing json request data
        data = ChallengeInput().load(request_json)
        #extracting challenge_id, challenge_title and text from posted data
        #challenge_id, challenge_title, text = data['challenge_id'], data['challenge_title'], data['text']
    except ValidationError as err: #in the case of incompatible parameters in data posted
        return jsonify(err.messages), 400   #response object and status code

    #insert into elastic search 
    try:
        response = c_esi.insert_update_challenge(data) 
        return jsonify(response), 200 #response object and status code 
    except Exception as err:
        print(err)
        return "Insert/Update unsuccessful"

if __name__ == "__main__":
    app.run(debug=True)    
    